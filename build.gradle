
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io/"
        }
    }
    dependencies {
        classpath "com.github.asbyth:ForgeGradle:6f53277"
    }
}
plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}
apply plugin: 'net.minecraftforge.gradle.forge'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = "1.0"
group= "dev.kyro" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "hunter"
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_20"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    // you may put jars on which you depend on in ./dev.kyro.hunter.libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

//    ArcticJDA dependencies
    compile 'net.dv8tion:JDA:4.2.0_232'

    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5'
    compile group: 'org.json', name: 'json', version: '20201115'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.29'

    compile 'com.github.ArcticDevelopment:ArcticJDA:058f5bcec8'
    compile 'com.github.ArcticDevelopment:ArcticAPI:1196e3ea78'
    compile 'com.github.TheNullicorn:Nedit:v1.2.0'
}

shadowJar {
    // Only shadow fluent-hc
    dependencies {
        include(dependency('net.dv8tion:JDA:.*'))

        include(dependency('org.apache.httpcomponents:httpclient:.*'))
        include(dependency('org.json:json:.*'))
        include(dependency('org.slf4j:slf4j-log4j12:.*'))

        include(dependency('com.github.ArcticDevelopment:ArcticJDA:.*'))
        include(dependency('com.github.ArcticDevelopment:ArcticAPI:.*'))
        include(dependency('com.github.TheNullicorn:Nedit:.*'))
    }

    // Relocate to prevent conflicts with other mods that include it
    relocate 'net', 'dev.kyro.libs.net'
    relocate 'com', 'dev.kyro.libs.com'
    relocate 'me', 'dev.kyro.libs.me'
    relocate 'org', 'dev.kyro.libs.org'
    relocate 'mozilla', 'dev.kyro.libs.mozilla'

    relocate 'dev.kyro.arcticjda', 'dev.kyro.libs.arcticjda'
    relocate 'dev.kyro.arcticapi', 'dev.kyro.libs.arcticapi'

    classifier '' // Replace the default JAR
}

reobf {
    shadowJar {} // Reobfuscate the shadowed JAR
}

repositories {
    mavenCentral()
    jcenter()

    maven { url 'https://jitpack.io' }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}